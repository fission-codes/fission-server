[package]
name = "fission-server"
version = "0.1.0"
description = ""
keywords = []
categories = []
include = ["/src", "README.md", "../LICENSE"]
license = "Apache-2.0"
readme = "README.md"
edition = "2021"
rust-version = "1.69"
documentation = "https://docs.rs/fission-server"
repository = "https://github.com/fission-codes/fission-server"
authors = ["Steven Vandevelde <icid.asset@gmail.com>", "Blaine Cook <blaine@fission.codes>"]
default-run = "fission-server-app"

[lib]
path = "src/lib.rs"
doctest = true

[[bin]]
name = "fission-server-app"
path = "src/main.rs"
doc = false

[[bin]]
name = "openapi"
path = "src/bin/openapi.rs"
test = false
doc = false
bench = false

[dependencies]
ansi_term = { version = "0.12", optional = true, default-features = false }
anyhow = { workspace = true }
async-trait = "0.1.72"
axum = { workspace = true, features = ["headers", "ws"] }
axum-macros = "0.3.7"
axum-server = "0.5.1"
axum-tracing-opentelemetry = { version = "0.10", features = ["otlp"] }
base64 = "0.21"
base64-url = "2.0.0"
bb8 = "0.8.0"
bytes = "1.4.0"
chrono = { version = "0.4", default-features = false, features = ["clock", "serde"] }
cid = "0.10.1"
config = "0.13"
console-subscriber = { version = "0.1", default-features = false, features = [ "parking_lot" ], optional = true }
const_format = "0.2"
dashmap = "5.5.0"
did-key = "0.2.1"
diesel = { version = "2.0.4", features = ["postgres", "chrono"] }
diesel-async = { version = "0.3", features = ["bb8", "postgres"] }
diesel_migrations = "2.1"
dyn-clone = "1.0.12"
fission-core = { path = "../fission-core", version = "0.1" }
futures = "0.3"
futures-util = "0.3.28"
headers = "0.3"
hex = "0.4.3"
http = "0.2"
http-serde = "1.1"
hyper = "0.14"
ipfs-api = { version="0.17.0", features = ["with-hyper"] }
ipfs-api-backend-hyper = { version="0.6.0", features = ["with-send-sync"] }
mailgun-rs = "0.1.5"
metrics = "0.21"
metrics-exporter-prometheus = "0.12.1"
metrics-util = { version = "0.15", default-features = true }
mime = "0.3"
num_cpus = "1.0"
once_cell = "1.14"
openssl = { version = "0.10", features = ["vendored"], default-features = false }
opentelemetry = { version = "0.18", features = ["rt-tokio", "trace"] }
opentelemetry-otlp = { version = "0.11", features = ["metrics", "grpc-tonic", "tls-roots"], default-features = false }
opentelemetry-semantic-conventions = "0.10"
parking_lot = "0.12"
pretty_assertions = "1.4.0"
rand = "0.8"
reqwest = { version = "0.11", features = ["json"] }
reqwest-middleware = "0.2"
reqwest-retry = "0.2"
reqwest-tracing = { version = "0.4", features = ["opentelemetry_0_17"] }
retry-policies = "0.1"
serde = { workspace = true }
serde_json = { workspace = true }
serde_path_to_error = "0.1"
serde_with = "3.1"
sysinfo = "0.29"
task-local-extensions = "0.1"
thiserror = "1.0"
time = { version = "0.3", features = ["serde-well-known", "serde-human-readable"] }
tokio = { version = "1.26", features = ["full", "parking_lot"] }
tokio-util = "0.7.8"
## Tied to opentelemetry-otlp dependency
tonic = { version = "0.8" }
tower = "0.4"
tower-http = { version = "0.4", features = ["catch-panic", "cors", "request-id", "sensitive-headers", "timeout", "trace", "util"] }
tracing = "0.1"
tracing-appender = "0.2"
tracing-opentelemetry = "0.20"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "parking_lot", "registry"] }
tracing-test = "0.2.4"
trust-dns-server = { version = "0.22.0", features = ["dns-over-rustls"] }
ucan = { workspace = true }
ucan-key-support = { workspace = true }
ulid = { version = "1.0", features = ["serde"] }
url = { workspace = true }
utoipa = { version = "3.1", features = ["uuid", "axum_extras"] }
utoipa-swagger-ui = { version = "3.1", features = ["axum"] }
validator = { version = "0.16.0", features = ["derive"] }

[dev-dependencies]
assert-json-diff = "2.0"
rsa = { version = "0.9" }
stringreader = "0.1.1"
tokio-test = "0.4"
uuid = "1.4.1"
wiremock = "0.5"

[features]
ansi-logs = ["ansi_term"]
console = ["console-subscriber"]
default = []

[package.metadata.docs.rs]
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
