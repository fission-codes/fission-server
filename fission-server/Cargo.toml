[package]
name = "fission-server"
version = "0.1.0"
description = ""
keywords = []
categories = []
include = ["/src", "README.md", "../LICENSE"]
license = "Apache-2.0"
readme = "README.md"
edition = "2021"
rust-version = "1.75"
documentation = "https://docs.rs/fission-server"
repository = "https://github.com/fission-codes/fission-server"
authors = [
    "Philipp Kr√ºger <philipp@fission.codes>",
    "Steven Vandevelde <icid.asset@gmail.com>",
    "Blaine Cook <blaine@fission.codes>",
]
default-run = "fission-server"

[lib]
path = "src/lib.rs"
doctest = true

[[bin]]
name = "fission-server"
path = "src/main.rs"
doc = false

[[bin]]
name = "openapi"
path = "src/bin/openapi.rs"
test = false
doc = false
bench = false

[dependencies]
ansi_term = { version = "0.12", default-features = false }
anyhow = { workspace = true }
async-trait = "0.1.72"
axum = { workspace = true, features = ["headers", "ws"] }
axum-macros = "0.3.7"
axum-server = "0.5.1"
axum-tracing-opentelemetry = { version = "0.13" }
base64-url = "2.0.0"
bb8 = "0.8.0"
bytes = "1.4.0"
car-mirror = { workspace = true }
quick_cache = "0.4.0"
chrono = { workspace = true }
cid = "0.10"
clap = { version = "4.4.6", features = ["derive"] }
config = { workspace = true }
console-subscriber = { version = "0.2", default-features = false, features = [ "parking_lot" ], optional = true }
const_format = "0.2"
dashmap = "5.5.0"
diesel = { version = "2.0", features = ["postgres", "chrono", "serde_json"] }
diesel-async = { version = "0.4", features = ["bb8", "postgres"] }
diesel_migrations = "2.1"
fission-core = { path = "../fission-core", version = "0.1" }
futures = "0.3"
futures-util = "0.3.28"
headers = "0.3"
hex = "0.4.3"
http = "0.2"
http-serde = "1.1"
hyper = "0.14"
mailgun-rs = "0.1.5"
metrics = "0.21"
metrics-exporter-prometheus = "0.12.1"
metrics-util = { version = "0.15", default-features = true }
mime = "0.3"
serde_ipld_dagcbor = { workspace = true }
num_cpus = "1.0"
once_cell = "1.14"
openssl = { version = "0.10", features = ["vendored"], default-features = false }
opentelemetry = { version = "0.20", features = ["trace"] }
opentelemetry-otlp = { version = "0.13", features = ["trace", "metrics", "grpc-tonic", "tls-roots"], default-features = false }
opentelemetry_sdk = { version = "0.22", features = ["rt-tokio"] }
opentelemetry-semantic-conventions = "0.12"
parking_lot = "0.12"
pretty_assertions = "1.4.0"
rand = "0.8"
reqwest = { version = "0.11", features = ["json"] }
reqwest-middleware = "0.2"
reqwest-retry = "0.2"
reqwest-tracing = { version = "0.4", features = ["opentelemetry_0_20"] }
retry-policies = "0.1"
serde = { workspace = true }
serde_json = { workspace = true }
serde_path_to_error = "0.1"
serde_with = "3.1"
sysinfo = "0.30"
task-local-extensions = "0.1"
thiserror = "1.0"
time = { version = "0.3", features = ["serde-well-known", "serde-human-readable"] }
tokio = { workspace = true }
tokio-util = { workspace = true }
## Tied to opentelemetry-otlp dependency
tonic = { version = "0.9", features = ["tls", "transport"] }
tower = "0.4"
tower-http = { version = "0.4", features = ["catch-panic", "cors", "request-id", "sensitive-headers", "timeout", "trace", "util"] }
tracing = "0.1"
tracing-appender = "0.2"
tracing-opentelemetry = "0.20"
tracing-subscriber = { workspace = true }
hickory-server = { version = "0.24", features = ["dns-over-rustls"] }
rs-ucan = { workspace = true }
ulid = { version = "1.0", features = ["serde"] }
url = { workspace = true }
utoipa = { workspace = true }
utoipa-swagger-ui = { version = "3.1", features = ["axum"] }
validator = { workspace = true }
ed25519 = { workspace = true }
ed25519-dalek = { workspace = true }
libipld = "0.16.0"
wnfs = { workspace = true }
blake3 = "1.4.1"
uuid = "1.4.1"
erased-serde = "0.3.31"

[dev-dependencies]
assert-json-diff = "2.0"
assert_matches = "1.5.0"
blake3 = "1.4.1"
test-log = { workspace = true }
testresult = { workspace = true }

[features]
test_utils = []
console = ["console-subscriber"]
default = []

[package.metadata.docs.rs]
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.cargo-udeps.ignore]
normal = ["axum-macros"]
